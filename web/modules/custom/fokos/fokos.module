<?php

use Drupal\node\NodeInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Hook per alterare il suggerimento del titolo della pagina.
 */
function fokos_theme_suggestions_page_title_alter(array &$suggestions, array $variables) {
    if (\Drupal::routeMatch()->getRouteName() === 'entity.node.canonical') {
        $node = \Drupal::routeMatch()->getParameter('node');
        if ($node instanceof NodeInterface) {
            $suggestions[] = 'page_title__node__' . $node->bundle();
        }
    }
}

/**
 * Hook per modificare i form.
 */
function fokos_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $forms_da_modificare = [
        'node_ospite_form', 'node_ospite_edit_form', 
        'node_entrate_uscite_form', 'node_entrate_uscite_edit_form',
        'node_soggiorno_form', 'node_soggiorno_edit_form',
    ];

    // Nascondi il titolo per tutti i form gestiti
    if (in_array($form_id, $forms_da_modificare, true)) {
        $form['title']['#access'] = FALSE;

        try {
            // Chiamata ai servizi specifici per tipo di contenuto
            if (in_array($form_id, ['node_entrate_uscite_form', 'node_entrate_uscite_edit_form'], true)) {
                /** @var \Drupal\fokos\Service\EntrateUsciteService $service */
                $service = \Drupal::service('fokos.entrate_uscite_service');
                $service->alterForm($form, $form_state, $form_id);
            }
            elseif (in_array($form_id, ['node_ospite_form', 'node_ospite_edit_form'], true)) {
                /** @var \Drupal\fokos\Service\OspitiService $service */
                $service = \Drupal::service('fokos.ospiti_service');
                $service->alterForm($form, $form_state, $form_id);
            }
            elseif (in_array($form_id, ['node_soggiorno_form', 'node_soggiorno_edit_form'], true)) {
                /** @var \Drupal\fokos\Service\SoggiornoService $service */
                $service = \Drupal::service('fokos.soggiorno_service');
                $service->alterForm($form, $form_state, $form_id);
            }
        } catch (\Exception $e) {
            \Drupal::logger('fokos')->error('Errore durante la modifica del form @form_id: @error', [
                '@form_id' => $form_id,
                '@error' => $e->getMessage()
            ]);
        }
    }
}

/**
 * Implements hook_entity_insert().
 */
function fokos_entity_insert(EntityInterface $entity) {
    if ($entity instanceof NodeInterface && $entity->bundle() === 'entrate_uscite') {
        $data_in = $entity->get('field_eo_data_in')->value;
        /** @var \Drupal\fokos\Service\SoggiornoService $soggiornoService */
        $soggiornoService = \Drupal::service('fokos.soggiorno_service');

        if ($data_in === date('Y-m-d')) {
            // Se la data Ã¨ oggi, crea solo il soggiorno giornaliero
            $soggiornoService->creaSoggiornoGiornaliero($entity, $data_in);
        } else {
            // Altrimenti genera tutti i soggiorni necessari
            $soggiornoService->generaSoggiorni($entity);
        }
    }
}

/**
 * Implements hook_entity_presave().
 */
function fokos_entity_presave(EntityInterface $entity) {
    // Gestiamo solo i nodi
    if (!($entity instanceof NodeInterface)) {
        return;
    }

    // Gestione creazione nuovi nodi
    if ($entity->isNew()) {
        switch ($entity->bundle()) {
            case 'ospite':
                /** @var \Drupal\fokos\Service\OspitiService $ospitiService */
                $ospitiService = \Drupal::service('fokos.ospiti_service');
                $ospitiService->setOspiteTitle($entity);
                break;

            case 'entrate_uscite':
                /** @var \Drupal\fokos\Service\EntrateUsciteService $entrateUsciteService */
                $entrateUsciteService = \Drupal::service('fokos.entrate_uscite_service');
                $entrateUsciteService->processNewEntrata($entity);
                break;
        }
        return;
    }

    // Gestione aggiornamento entrate/uscite esistenti
    if ($entity->bundle() === 'entrate_uscite') {
        /** @var \Drupal\fokos\Service\SoggiornoService $soggiornoService */
        $soggiornoService = \Drupal::service('fokos.soggiorno_service');
        $soggiornoService->sincronizzaSoggiorni($entity);
    }
}

/**
 * Implements hook_entity_predelete().
 */
function fokos_entity_predelete(EntityInterface $entity) {
    if ($entity instanceof NodeInterface && $entity->bundle() === 'entrate_uscite') {
        /** @var \Drupal\fokos\Service\SoggiornoService $soggiornoService */
        $soggiornoService = \Drupal::service('fokos.soggiorno_service');
        $num_deleted = $soggiornoService->eliminaSoggiorniPerEntrataUscita($entity);
        \Drupal::logger('fokos')->notice('Eliminati @num soggiorni per entrata/uscita @id', [
            '@num' => $num_deleted,
            '@id' => $entity->id()
        ]);
    }
}


